unit U_ObsMotorista;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons;

type
  Tfrm_ObsMotorista = class(TForm)
    lblMotorista: TLabel;
    edtMotorista: TEdit;
    mmObservacao: TMemo;
    lblObervacao: TLabel;
    btnConfirmar: TBitBtn;
    btnCancelar: TBitBtn;
    procedure edtMotoristaKeyPress(Sender: TObject; var Key: Char);
    procedure mmObservacaoKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure FormShortCut(var Msg: TWMKey; var Handled: Boolean);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnConfirmarClick(Sender: TObject);
  private
    FObservacao: string;
    FMotorista: string;
    class function GetMotorista(AMotorista: string): string; static;
    class function GetObservacao(AObs: string): string; static;
    { Private declarations }
  public
  class procedure ShowForm;
  class procedure GetResult(out AMotorista: String; out AObservacao: string);
  end;

var
  frm_ObsMotorista: Tfrm_ObsMotorista;

implementation

{$R *.dfm}

{ Tfrm_ObsMotorista }

procedure Tfrm_ObsMotorista.btnCancelarClick(Sender: TObject);
begin
  if MessageBox(Handle, 'Deseja Cancelar ?', 'ATENÇÃO', MB_ICONQUESTION + MB_YESNO)
   = IDYES then Close;

end;

procedure Tfrm_ObsMotorista.btnConfirmarClick(Sender: TObject);
begin
  FMotorista    := edtMotorista.Text;
  FObservacao   := mmObservacao.Text;

  ModalResult := mrOk;
end;

procedure Tfrm_ObsMotorista.edtMotoristaKeyPress(Sender: TObject;
  var Key: Char);
begin
  if Key = #13 then mmObservacao.SetFocus;

  Key := AnsiUpperCase(key)[1];
end;

procedure Tfrm_ObsMotorista.FormKeyPress(Sender: TObject; var Key: Char);
begin
  If Key = #27 Then
   Close;
end;

procedure Tfrm_ObsMotorista.FormShortCut(var Msg: TWMKey; var Handled: Boolean);
begin
  if Msg.CharCode = VK_ESCAPE then
   Close;

end;

class function Tfrm_ObsMotorista.GetMotorista(AMotorista: string): string;
var
  FMotorista: string;
begin
  FMotorista := AMotorista;

  Result := FMotorista;
end;

class function Tfrm_ObsMotorista.GetObservacao(AObs: string): string;
var
  FObs: string;
begin
  FObs := AObs;

  Result := FObs;
end;

class procedure Tfrm_ObsMotorista.GetResult(out AMotorista,
  AObservacao: string);
begin
  with Tfrm_ObsMotorista.Create(Application) do
  try
    ShowModal;
  finally
    AMotorista   := FMotorista;
    AObservacao  := FObservacao;
    Free;
  end;
end;

procedure Tfrm_ObsMotorista.mmObservacaoKeyPress(Sender: TObject;
  var Key: Char);
begin
  if Key = #13 then btnConfirmar.SetFocus;

  Key := AnsiUpperCase(key)[1];
end;

class procedure Tfrm_ObsMotorista.ShowForm;
begin
  with Tfrm_ObsMotorista.Create(nil) do
  try
    ShowModal;

  finally
    Free;
  end;
end;

end.
